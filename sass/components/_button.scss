
.btn{
  
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; 
    /* ^ always use if want to pad, will keep from overlapping */
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: $default-font-size;
  }
  
  &:hover{
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    &::after{
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }

  }

  &:active{
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  
  }
  
  &--white{
    background-color: $color-white;
    color: $color-grey-dark;

    &::after{
      background-color: $color-white;
    }
  }
  &::after{
    content: "";
    display: inline-block; 
    /* ^want this to be same as button, after psudo element is like child*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1; 
    /* ^ z-index defines position elements on top of each other, -1 behind btn */
    transition: all .4s;
    /* do this after the transform, need transition */
  }
  
  &--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
    /* name duration timing function and delay, fill mode, automatically applies
    styles at 0% before animation starts */
  }

}

.btn-text{
  &:link,
  &:visited{
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;
  }
  &:hover{
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-2px);
  }
  &:active{
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0);
  }
}